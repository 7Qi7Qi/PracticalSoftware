${AnsiColor.MAGENTA}
_ __ ___  _ __   __ _  __ _ ___
| '_ ` _ \| '_ \ / _` |/ _` / __|
| | | | | | |_) | (_| | (_| \__ \
|_| |_| |_| .__/ \__,_|\__,_|___/
          | |
          |_|
:: Java         :: ${java.version}
:: Spring Boot  :: ${spring-boot.version}
Application ${application.title}: ${application.version}
${AnsiStyle.NORMAL}

yolo-token: pv1zbxeyTEyezeGH4SCv

1. method-name
       clazz.method();
       clazz.method0(); //inner invoke method
2. DBUtil.groovy
3. @Slf4j
4. org.apache.commons.fileupload
5. Music-plugin 
6. Thread#interrupt() 通知作用，没有直接唤起
7. FileOutputStream 没有文件会自动创建
8. 简单的http服务器
    1. python2: python -m SimpleHTTPServer 10086
    2. python3: python -m http.server 10086
9. File.separator
10. wsl crontab -l
11. -threads 5 -preset ultrafast 
12. ObjectMapper#readValue
13. torque
14. Files.readAllBytes(file.toPath())
15. jar打包 https://blog.csdn.net/tian830937/article/details/119580796
16. Runtime.getRuntime(exec(cmd, null, workPath))
17. Go To Test 快速创建Test类
18. synchronized 如果是加载一个类的两个非静态方法上，则是对象加锁，静态方法是类加锁。如果是个单例则是类加锁。
可重入，非公平，独占悲观锁
19. statefulset 和 deployment k8s管理pod的控制器
sts 有状态 需要保证pod的稳定性和数据持久性
 1. 有状态，命名是按照序号生成，可以保证重启后具有相同的名称和状态
 2. 可以为每个pod单独分配存储卷，保证数据的持久性和可靠性
 3. 不支持滚动更新，需要先停旧的再启动新的
deploy 无状态快速部署和更新
 1. 无状态，命名是随机生成的，可以在任意节点上重启或重新创建
 2. pod共用一个存储卷，数据可能会丢失或覆盖
 3. 支持滚动更新，可以在不中断服务的情况下逐步更新pod
20. hashmap value可以为空，但是Collectors.toMap里的merge方法不能为空
21. 锁
 1. 构造新的对象期间，允许读取老的对象。
    构造新对象时不需要一致性，不用加锁
    需要一致时，则在统一赋值时加写锁
 2. 构造新的对象期间，不允许读取老的对象
    可以直接使用synchronized，类方法可以去锁对象。
22. jmeter jar如何实现直接运行



+------+----------------------+--------------------------+-----------------+
|序号  |服务名                |镜像tag                   |镜像ID        |
+------+----------------------+--------------------------+-----------------+
|1     |proxyv2               |6.2.9                     |3d81a3fd0c05  |
|14    |suse12sp5x86          |ITInfra1.1.1.20210927     |67997472df5b  |
+------+----------------------+--------------------------+-----------------+

ToDo Project

- 类Apollo 配置中心
- 消息推送
- 任务调度
    类名 + 服务名 + 参数
- Jenkins 
    - TESTNG: https://www.cnblogs.com/jinjiezhilu/p/6856742.html
- 组件 https://lew.kamtao.com/#/BackTop
- jmockit hsqldb junit5
- blog-docker https://vanblog.mereith.com/intro.html
- simple spring https://solon.noear.org/
- simple db https://competition.huaweicloud.com/information/1000041405/circumstance
- axios request封装
- vue-cli
- https://stackoverflow.com/questions/309424/how-do-i-read-convert-an-inputstream-into-a-string-in-java
- http://c.biancheng.net/spring_boot/overview.html
- https://panjiachen.github.io/awesome-bookmarks/
- vue3 组件 https://fighting.tianyuhao.cn/
- anytxt-tool https://github.com/echohw/anytxt-tool
- ruoyi-vue https://github.com/YunaiV/ruoyi-vue-pro

视频
- https://youtu.be/6Zt33FoCQ_A?t=1279
- https://oschina.gitee.io/learn-git-branching/
- https://github.com/erwanjun/weixin_tuisong
- https://github.com/avelino/awesome-go


软件：
- 录像 faststone
- 剪切板 ditto
- 


bat
- 赋值时，等号两侧不能加空格
- 取变量值 %val%
- 输入 %0-%9

shell
- 赋值时，等号两侧不能加空格
- 执行表达式获取值 $() 
- 字符串传参，执行命令 eval "string"
- ${} / $ / 
- if [ -f $file ]; then
    return
  fi
  - -z为空 -d文件夹存在 -f 文件存在
- 判断命令是否执行成功: if [ ?# 0 ];



其他
- ffmpeg： 奇乐
```
FFMPEG_PATH("FFMPEG System Environment Path", "ffmpeg "), SIMPLE_CLIP("IN-START-END-OUT", " -ss %s -i \"%s\" -to %s -c copy \"%s\""), CREATE_COVER("TIME-IN-OUT", " -ss %s -i \"%s\" -vframes 1 -q:v 1 \"%s\""), REPLACE_COVER("IN-PIC-OUT", " -i \"%s\" -i \"%s\" -map 1 -map 0 -c copy -disposition:0 attached_pic -y \"%s\"");  
```
- 



💍 test: Adding missing tests
🎸 feat: A new feature
🐛 fix: A bug fix
🤖 chore: Build process or auxiliary tool changes
✏️ docs: Documentation only changes
💡 refactor: A code change that neither fixes a bug or adds a feature
💄 style: Markup, white-space, formatting, missing semi-colons...


1.公积金：你交 12%，公司就交 12%，这部分钱还不算个税，等于变相强制储蓄了，不买房就亏个活期的利息，买房每个月都可以拿出来还贷款
2.医保：北京每个月可以提取个人部分，也等于回来了
3.社保：这里最亏，虽然说可以全国转移，但只是个人部分，如果老了不在北京退休回到三线，那就是拿 3 线的钱。


2023-02-27

1. commad kit example: https://github.com/SphereEx/shardingsphere-toolkit
2. read sql file
```java

Reader reader = Resources.getResourceAsReader(sqlFile)
ScriptRunner runner = new ScriptRunner(conn);
runner.runScript(reader);

```
3. mkdirs 非 mkdir
4. msql 备份 mysqldump
    同步 https://blog.csdn.net/international24/article/details/105127181
5. SpringBoot和VUE整合打包
https://lushunjian.gitee.io/2020/02/18/springboot-yu-vue-xiang-mu-zheng-he-da-bao/
6. wsl异常处理
https://blog.csdn.net/xxj_jing/article/details/132534277

心得
1. 使用Files.move替代Files.copy，速度上来说会快一点，但是不多
2. ddd重构心得
xxx-sdk ---开发共享包：提供给其他服务的工具包。不依赖
xxx-endpoint ---程序入口： 启动类和应用接入层。依赖所有
xxx-respoitory ---与数据库交互类。依赖model
xxx-utils ---通用工具。不依赖
xxx-domain-model ---领域的模型类。依赖sdk+utils
xxx-domain-service ---提供职责单一领域服务，不依赖其他服务。依赖repository
xxx-biz-service ---应用服务层：组合了单一功能的复合类。依赖domain-service + integeration
xxx-integeration ---适配依赖的外部服务，异常处理以及消息转换。依赖domain-model
xxx-test


chmod 1777 rwxrwxrwxt t表示只能目录所属者才能删除其中文件。
SafeVarargs
FunctionalInterface

maven clean install 会判断maven-metadata-local.xml里的时间，会取时间较新的jar包，不一定总是从远端下包
项目的同路径同名类会取值用最近原则

org.springframework.util.StopWatch
Jdk JavaScriptEngine

-exec 后面接其他执行的指令来处理前一个命令得到的结果。（注意{} 左右两边要留空格）
{ } 代表的是「由 find 找到的内容」找到的结果会被放置到 { } 位置中;
-exec  到 ; 代表处理搜寻到的结果的动作，因为「;」在bash的环境下是有特殊意义的，要在前面加反斜杠\转译。
' \; 单引号和反斜杠之间要有空格

awk '{print $1"-"$2}' 双引号中间是连接符
&& 依次执行命令
|| 前面执行失败 会执行后面命令
批量将sh脚本转为linux换行符
find . -type f -name ".sh" -exec dos2unix {} \; 
echo '' > a.json
unzip local.zip && chown -R hda:sshonly local-1 && chmod -R 777 local-1
find . -type f -exec chattr -i {} \; && rm -rf local-1
timeout -s 9 1s sudo chattr +i
-> basename tt.txt .txt
<- tt
$(cd $(dirname $0); pwd)
${name%.cpt} 去除文件名


- 端口转发到容器
iptables -t nat -I PREROUTING -p tcp --dport 36418 -j DNAT --to-destination 182.10.11.48:36418
iptables -t nat -D PREROUTING -p tcp --dport 36418 -j DNAT --to-destination 182.10.11.73:36418

- 拒绝连接
iptables -A INPUT -d 198.7.0.240 -s 10.244.106.40 -j DROP

iptables -L --line-numbers

iptables -D <chain> <line-number>

kubectl patch 

- 分卷压缩
tar -cvzf - /path/to/source | split -b 100M - /path/to/destination/filename.tar.gz

- 分卷解压
- 合并为一个压缩文件，再解压缩
cat filename.tar.gz* > filename.tar.gz 

